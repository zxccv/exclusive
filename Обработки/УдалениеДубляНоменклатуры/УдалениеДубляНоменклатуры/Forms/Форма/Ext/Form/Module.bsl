////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Притула Р.В. Начало 31.08.2018 #2860
	//Если НЕ (Пользователи.РолиДоступны("ПросмотрЖурналаРегистрации") 
	Если Не (Пользователи.РолиДоступны("ПросмотрЖурналаРегистрации, КБУ_ПроверкаСозданнойНоменклатуры"))
	//Притула Р.В. Конец  31.08.2018	
		
		//Притула Р.В. Начало 10.08.2018
		//Гризодуб И.В. Начало 08.10.2018
		//или ПараметрыСеанса.ТекущийПользователь.Наименование = "Архипова Марина Геннадьевна ")
		//Гризодуб И.В. Конец 08.10.2018
		//Притула Р.В. Конец  10.08.2018
			Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОбъектСсылка = Параметры.ДополнительнаяОбработкаСсылка;
	
	Если Параметры.ОбъектыНазначения <> Неопределено Тогда
		Для Каждого ЭлементОбъектыНазначения Из Параметры.ОбъектыНазначения Цикл
			ОбъектыНазначения.Добавить(ЭлементОбъектыНазначения);
		КонецЦикла;
	
	
		ИдентификаторКоманды = Параметры.ИдентификаторКоманды;	
		
		ИмяФормыВладельца = Параметры.ИмяФормы;
		ИнформацияОВладельце = ДополнительныеОтчетыИОбработкиПовтИсп.ПараметрыФормыНазначаемогоОбъекта(ИмяФормыВладельца);
		
		СсылкаРодителя  = ИнформацияОВладельце.СсылкаРодителя;
		ЭтоФормаОбъекта = ИнформацияОВладельце.ЭтоФормаОбъекта;
	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Программный интерфейс
&НаСервереБезКонтекста
Функция НоменклатураИспользоваласьВДоступномПериоде(Номенклатура)

	Если РольДоступна("ПолныеПрава") Тогда
		Возврат Истина;
	КонецЕсли;
	
	РазрешеноДней = 10;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВсеРегистры.Период) КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|	ГДЕ
	|		ЦеныНоменклатуры.Номенклатура = &Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МИНИМУМ(СвободныеОстатки.Период)
	|	ИЗ
	|		РегистрНакопления.СвободныеОстатки КАК СвободныеОстатки
	|	ГДЕ
	|		СвободныеОстатки.Номенклатура = &Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МИНИМУМ(ТоварыНаСкладах.Период)
	|	ИЗ
	|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|	ГДЕ
	|		ТоварыНаСкладах.Номенклатура = &Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МИНИМУМ(ТоварыОрганизаций.Период)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|	ГДЕ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МИНИМУМ(ВыручкаИСебестоимостьПродаж.Период)
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|	ГДЕ
	|		ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура) КАК ТаблицаВсеРегистры";
	
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если НЕ ЗначениеЗаполнено(Выборка.Период) Тогда
			Возврат Истина;			
		КонецЕсли;
		
		Если Выборка.Период < ТекущаяДата() - РазрешеноДней * 24 * 60 * 60 Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
		
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
	
	ЭтаФорма.Открыть();
	Если ОбъектыНазначенияМассив.Количество() = 1 Тогда
		Номенклатура = ОбъектыНазначенияМассив[0];			
			
		Если НЕ НоменклатураИспользоваласьВДоступномПериоде(Номенклатура) Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтменаОперации", ЭтаФорма), "Номенклатура используется в документах которым уже более 10 дней, удаление невозможно.");
			Возврат;
		КонецЕсли;
		
		ПоказатьВводЗначения(Новый ОписаниеОповещения("СопоставитьДругойНоменклатуреЗавершение", ЭтаФорма,Новый Структура("Номенклатура",Номенклатура)), Номенклатура);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаОперации(ДополнительныеПараметры) Экспорт
	
	Закрыть();	

КонецПроцедуры

&НаКлиенте
Процедура СопоставитьДругойНоменклатуреЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Значение) Тогда
		//Притула Р.В. Начало 31.08.2018 #2860
		//СопоставитьДругойНоменклатуреНаСервере(ДополнительныеПараметры.Номенклатура,Значение);		
		Если Значение = ДополнительныеПараметры.Номенклатура Тогда 
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ЗакрытьФорму",ЭтаФорма),"Нельзя сопоставить номенклатуру самой себе",,"Ошибка");
			Возврат;
		Иначе
			СопоставитьДругойНоменклатуреНаСервере(ДополнительныеПараметры.Номенклатура,Значение);		
		КонецЕсли;	
		//Притула Р.В. Конец  31.08.2018
		
	КонецЕсли;
	ЭтаФорма.Закрыть();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(ДополнительныеПараметры) Экспорт
	
	ЭтаФорма.Закрыть();	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УдалитьНоменклатуруИзУстановокЦен(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатуры.Регистратор КАК Регистратор,
	|	УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|		ПО ЦеныНоменклатуры.Регистратор = УстановкаЦенНоменклатурыТовары.Ссылка
	|			И (УстановкаЦенНоменклатурыТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура)
	|			И (УстановкаЦенНоменклатурыТовары.Характеристика = ЦеныНоменклатуры.Характеристика)
	|			И (УстановкаЦенНоменклатурыТовары.ВидЦены = ЦеныНоменклатуры.ВидЦены)
	|ГДЕ
	|	ЦеныНоменклатуры.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ
	|ИТОГИ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		УЦОбъект = ВыборкаДокументы.Регистратор.ПолучитьОбъект();
		
		Выборка = ВыборкаДокументы.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			УЦОбъект.Товары.Удалить(Выборка.НомерСтроки - 1);
			
		КонецЦикла;
		
		Если УЦОбъект.Проведен Тогда
			УЦОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			УЦОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СопоставитьДругойНоменклатуреНаСервере(Номенклатура,НоменклатураНовая)
	
	НачатьТранзакцию();
	
	УстановитьПривилегированныйРежим(Истина);

	УдалитьНоменклатуруИзУстановокЦен(Номенклатура);
	
	массивНоменклатуры = Новый Массив;
	массивНоменклатуры.Добавить(Номенклатура);
	
	массивОбластьПоиска = Новый Массив;
	массивОбластьПоиска.Добавить("Справочник.КлючиАналитикиУчетаНоменклатуры");
	массивОбластьПоиска.Добавить("Справочник.НоменклатураПоставщиков");
	массивОбластьПоиска.Добавить("Справочник.ХарактеристикиНоменклатуры");
	массивОбластьПоиска.Добавить("Документ.ПриобретениеТоваровУслуг");
	массивОбластьПоиска.Добавить("Документ.ЗаказПоставщику");
	массивОбластьПоиска.Добавить("Документ.ЗаказКлиента");
	массивОбластьПоиска.Добавить("Документ.РеализацияТоваровУслуг");
	массивОбластьПоиска.Добавить("Документ.ПересортицаТоваров");	
	массивОбластьПоиска.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	массивОбластьПоиска.Добавить("РегистрСведений.ГруппыЗначенийДоступа");
	массивОбластьПоиска.Добавить("РегистрСведений.ДатыПоступленияТоваровОрганизаций");
	
	//ТаблицаСсылок = НайтиПоСсылкам(массивНоменклатуры,Новый Массив,массивОбластьПоиска);
	ТаблицаСсылок = НайтиПоСсылкам(массивНоменклатуры);
	
	ТаблицаЗамены = ТаблицаСсылок.Скопировать(,"Ссылка,Данные,Метаданные");
	
	ТаблицаЗамены.Колонки.Добавить("ПравильнаяСсылка");
	
	Для Каждого стрЗамены Из ТаблицаЗамены Цикл
		
		стрЗамены.ПравильнаяСсылка = НоменклатураНовая;
		
	КонецЦикла;
	
	ЗапросХарактеристики = Новый Запрос;
	ЗапросХарактеристики.Текст =
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыИсходной.Характеристика КАК ХарактеристикаИсходная,
	|	ХарактеристикиНоменклатурыНовой.Характеристика КАК ХарактеристикаНовая
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ГДЕ
	|		ХарактеристикиНоменклатуры.Владелец = &НоменклатураИсходная) КАК ХарактеристикиНоменклатурыИсходной,
	|	(ВЫБРАТЬ
	|		ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ГДЕ
	|		ХарактеристикиНоменклатуры.Владелец = &НоменклатураНовая) КАК ХарактеристикиНоменклатурыНовой
	|ГДЕ
	|	ХарактеристикиНоменклатурыИсходной.Характеристика.Наименование = ХарактеристикиНоменклатурыНовой.Характеристика.Наименование";
	
	ЗапросХарактеристики.УстановитьПараметр("НоменклатураИсходная",Номенклатура);
	ЗапросХарактеристики.УстановитьПараметр("НоменклатураНовая",НоменклатураНовая);
	
	ВыборкаХарактеристики = ЗапросХарактеристики.Выполнить().Выбрать();
	
	Пока ВыборкаХарактеристики.Следующий() Цикл
		
		строкаЗаменаХарактеристики = ТаблицаЗамены.Найти(ВыборкаХарактеристики.ХарактеристикаИсходная,"Данные");
		
		Если строкаЗаменаХарактеристики <> Неопределено Тогда
			ТаблицаЗамены.Удалить(строкаЗаменаХарактеристики);
		КонецЕсли;
		
		массивХарактеристик = Новый Массив;
		массивХарактеристик.Добавить(ВыборкаХарактеристики.ХарактеристикаИсходная);
		
		ТаблицаСсылок = НайтиПоСсылкам(массивХарактеристик,Новый Массив,массивОбластьПоиска);
		Для Каждого стрСсылка Из ТаблицаСсылок Цикл
			
			новЗамена = ТаблицаЗамены.Добавить();
			ЗаполнитьЗначенияСвойств(новЗамена,стрСсылка);
			новЗамена.ПравильнаяСсылка = ВыборкаХарактеристики.ХарактеристикаНовая;
			
		КонецЦикла;
		
		ХарактеристикаОбъект = ВыборкаХарактеристики.ХарактеристикаИсходная.ПолучитьОбъект();
		ХарактеристикаОбъект.ПометкаУдаления = Истина;
		ХарактеристикаОбъект.Записать();
				
	КонецЦикла;
	
	ЗапросНоменклатураПоставщика = Новый Запрос;
	ЗапросНоменклатураПоставщика.Текст =
	"ВЫБРАТЬ
	|	НоменклатураПоставщиков.Ссылка
	|ИЗ
	|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|ГДЕ
	|	НоменклатураПоставщиков.Номенклатура = &Номенклатура";
	
	ЗапросНоменклатураПоставщика.УстановитьПараметр("Номенклатура",Номенклатура);
	
	ВыборкаНоменклатураПоставщика = ЗапросНоменклатураПоставщика.Выполнить().Выбрать();
	
	Пока ВыборкаНоменклатураПоставщика.Следующий() Цикл
		
		НПОбъект = ВыборкаНоменклатураПоставщика.Ссылка.ПолучитьОбъект();
		НПОбъект.Наименование = НоменклатураНовая.Наименование;
		НПОбъект.Записать();
		
	КонецЦикла; 	
		
	//мз = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	//мз.Объект = Номенклатура;
	//мз.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Номенклатура создана при загрузке поступления. Требуется проверка");
	//мз.Удалить();	
	//
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	ДополнительныеПараметры = Новый Структура;
	
	ДополнительныеПараметры.Вставить("ВыполнятьВТранзакции", Истина);
	ДополнительныеПараметры.Вставить("КоличествоОбъектовВТранзакции", 0);
	ДополнительныеПараметры.Вставить("ВыполнятьЗаписьОбъектаВТранзакции", Истина);
	
	ДополнительныеПараметры.Вставить("НормализоватьТаблицуЗамен", Ложь);

	ДополнительныеПараметры.Вставить("ОбменДанными", Новый Структура());
	ДополнительныеПараметры.ОбменДанными.Вставить("Загрузка", Истина);	
	
	ОбработкаОбъект.ВыполнитьЗаменуЭлементов(ТаблицаЗамены, ДополнительныеПараметры);
	
	
	Номенклатура.ПолучитьОбъект().Удалить();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура Удолить(Команда)
	
	Номенклатура = НоменклатураРеквизит;			
			
	Если НЕ НоменклатураИспользоваласьВДоступномПериоде(Номенклатура) Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОтменаОперации", ЭтаФорма), "Номенклатура используется в документах которым уже более 10 дней, удаление невозможно.");
		Возврат;
	КонецЕсли;
	
	ПоказатьВводЗначения(Новый ОписаниеОповещения("СопоставитьДругойНоменклатуреЗавершение", ЭтаФорма,Новый Структура("Номенклатура",Номенклатура)), Номенклатура);	
	
КонецПроцедуры




