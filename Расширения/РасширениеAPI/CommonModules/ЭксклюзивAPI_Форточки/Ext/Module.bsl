&НаСервере
Функция ПолучитьСтруктуруURL() Экспорт 
	
	структураВозврат = Новый Структура;
	
	структураВозврат.Вставить("API_tns","Wcf.ClientService.Client.WebAPI.TS3");
	структураВозврат.Вставить("URL_datacontract","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SearchTires");
	структураВозврат.Вставить("URL_microsoft","http://schemas.microsoft.com/2003/10/Serialization/Arrays");
	структураВозврат.Вставить("URL_SearchTires","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SearchTires");
	структураВозврат.Вставить("URL_SearchDiscs","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SearchDiscs");
	структураВозврат.Вставить("URL_SearchProductsAndPricesInfo","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SearchProductsAndPricesInfo");
	структураВозврат.Вставить("URL_SearchProductsBySpecs","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SearchProductsBySpecs");
	структураВозврат.Вставить("URL_SetProductsPrice","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SetProductsPrice");
	структураВозврат.Вставить("URL_SetProductsQtyOnWarehouse","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.SetProductsQtyOnWarehouse");
	структураВозврат.Вставить("URL_CreateOrder","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.CreateOrder");
	структураВозврат.Вставить("URL_GetChangedOrders","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.GetChangedOrders");
	структураВозврат.Вставить("URL_GetOrderStatus","http://schemas.datacontract.org/2004/07/TS3.Domain.Models.Client.ClientSoapService.GetOrderStatus");
	
	Возврат структураВозврат;
	
КонецФункции

&НаСервере
Функция ПолучитьНастройкиВхода() Экспорт
	
	//Притула Р.В. Начало 23.08.2018
	//структураНастройки = ХранилищеОбщихНастроек.Загрузить("НастройкиЭксклюзивФорточки","ПользовательскиеНастройки");
	структураНастройки = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("Форточки");
	//Притула Р.В. Конец  23.08.2018
	
	Если НЕ ТипЗнч(структураНастройки) = Тип("Структура")
		//Притула Р.В. Начало 23.08.2018
		//ИЛИ НЕ ЗначениеЗаполнено(структураНастройки.Логин)
		//ИЛИ НЕ ЗначениеЗаполнено(структураНастройки.Пароль) Тогда
		ИЛИ НЕ ЗначениеЗаполнено(структураНастройки.login)
		ИЛИ НЕ ЗначениеЗаполнено(структураНастройки.password) Тогда
		//Притула Р.В. Конец  23.08.2018
		Возврат Новый Структура("login,password","",""); 
	КонецЕсли;
	
	//Притула Р.В. Начало 23.08.2018
	//Возврат Новый Структура("login,password",структураНастройки.Логин,структураНастройки.Пароль);
	Возврат Новый Структура("login,password",структураНастройки.login,структураНастройки.password);
	//Притула Р.В. Конец  23.08.2018
			
КонецФункции

&НаСервере
Функция Ping() Экспорт
	
	структураУРЛов = ПолучитьСтруктуруURL();
	Прокси = WSСсылки.PwrsWebService.СоздатьWSПрокси(структураУРЛов.API_tns, "ClientService", "BasicHttpBinding_ClientService");
	НастройкиПодключения = ПолучитьНастройкиВхода();	
	
	Возврат Прокси.Ping(НастройкиПодключения.login, НастройкиПодключения.password);
		
КонецФункции

Процедура ВыгрузитьФайлНаFTP(ИмяФайла,ТекстФайла) Экспорт
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстФайла);
	ТекстовыйДокумент.Записать(ИмяВременногоФайла,КодировкаТекста.UTF8);
	
	УстановитьПривилегированныйРежим(Истина);
	тзНастройки = ХранилищеОбщихНастроек.Загрузить("НастройкиЭксклюзив","Форточки",,"НастройкиЭксклюзив");
		
	Если ТипЗнч(тзНастройки) = Тип("ТаблицаЗначений") И тзНастройки.Количество() > 0
		И НЕ Экс_ОбщегоНазначенияСервер.ЭтоТестоваяБаза() Тогда		
		
		FTP = Новый FTPСоединение(тзНастройки[0].ftp_server,тзНастройки[0].ftp_port,тзНастройки[0].ftp_user,тзНастройки[0].ftp_password);
		FTP.УстановитьТекущийКаталог(тзНастройки[0].ftp_folder);
			
	Иначе
		
		ВызватьИсключение "Не заданы настройки FTP для подключения к Форточкам или обработка выполняется в тестовой базе";
	
	КонецЕсли;
	
	FTP.Записать(ИмяВременногоФайла,ИмяФайла);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

//Притула Р.В. Начало 13.08.2018
&НаСервере
Функция НайтиСоздатьШину(САЕ) Экспорт
	
	Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",САЕ);
	
	Если НЕ Номенклатура.Пустая() Тогда
		Возврат Номенклатура;
	КонецЕсли;
	
	ДанныеКолеса = ПолучитьДанныеКолесаФорточки(САЕ);
	
	Если ДанныеКолеса = Неопределено Тогда
		ВызватьИсключение "Не удалось получить данные шины с кодом " + САЕ + " с сайта форточек";
	КонецЕсли;
	
	новНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
	
	новНоменклатура.Родитель = Справочники.Номенклатура.НайтиПоНаименованию("Автошины с Форточек",Истина);
	новНоменклатура.Наименование = ДанныеКолеса.name;
	новНоменклатура.Артикул = ДанныеКолеса.code;
	новНоменклатура.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	новНоменклатура.ВестиУчетПоГТД = Истина;
	новНоменклатура.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Автомобильные шины (легковые)",Истина);
	новНоменклатура.ГруппаДоступа = Справочники.ГруппыДоступаНоменклатуры.НайтиПоНаименованию("Автомобильные шины (легковой)",Истина);
	новНоменклатура.ЕдиницаИзмерения = новНоменклатура.ВидНоменклатуры.ЕдиницаИзмерения;
	новНоменклатура.ЕдиницаДляОтчетов = новНоменклатура.ЕдиницаИзмерения;
	новНоменклатура.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
	новНоменклатура.Качество = Перечисления.ГрадацииКачества.Новый;
	новНоменклатура.Марка = Справочники.Марки.НайтиПоНаименованию(ДанныеКолеса.brand,Истина);
	новНоменклатура.Производитель = Справочники.Производители.НайтиПоНаименованию(ДанныеКолеса.brand,Истина);
	новНоменклатура.НаименованиеПолное = "Автошина " + ?(ЗначениеЗаполнено(новНоменклатура.Марка.Наименование),новНоменклатура.Марка.Наименование + " ","") + новНоменклатура.Наименование; 
	новНоменклатура.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	новНоменклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
	новНоменклатура.СхемаОбеспечения = Справочники.СхемыОбеспечения.НайтиПоНаименованию("Основная схема обеспечения (создана при обновлении ИБ)",Истина);
	новНоменклатура.КоэффициентЕдиницыДляОтчетов = 1;
	
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Бренд",ДанныеКолеса.brand,Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Модель легковой шины",ДанныеКолеса.model,Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Диаметр обода, R, дюйм",Формат(ДанныеКолеса.diameter,"ЧРД=.; ЧРГ=; ЧГ="),Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Профиль, ширина, мм",Формат(ДанныеКолеса.width,"ЧРД=.; ЧРГ=; ЧГ="),Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Профиль, высота, %",Формат(ДанныеКолеса.height,"ЧРД=.; ЧРГ=; ЧГ="),Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Шипованная шина",ДанныеКолеса.thorn,Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Индекс грузоподъёмности (нагрузки)",ДанныеКолеса.load_index,Ложь);
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Индекс скорости",ДанныеКолеса.speed_index,Ложь);
	Если ДанныеКолеса.season = "w" Тогда
		Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Сезонность","Зимние",Ложь);
	Иначе
		Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Сезонность","Летние",Ложь);
	КонецЕсли;
	
	Экс_ОбщегоНазначенияСервер.УстановитьЗначениеДопРеквизитаНомеклатуры(новНоменклатура,"Выгружать на сайт tyres.spb.ru","Да",Ложь);
	
	//Притула Р.В. Начало 13.08.2018 #2666
	новНоменклатура.СкладскаяГруппа = Справочники.СкладскиеГруппыНоменклатуры.НайтиПоНаименованию("Товар");
	новНоменклатура.ИспользоватьУпаковки = Истина;
	новНоменклатура.НаборУпаковок = Справочники.НаборыУпаковок.НайтиПоНаименованию("шт");
	//Притула Р.В. Конец  13.08.2018
	
	новНоменклатура.Записать();
	
	Возврат новНоменклатура.Ссылка;
			
КонецФункции

&НаСервере
Функция ПолучитьДанныеКолесаФорточки(САЕ) Экспорт
	
	структураУРЛов = ПолучитьСтруктуруURL();
	Прокси = WSСсылки.PwrsWebService.СоздатьWSПрокси(структураУРЛов.API_tns, "ClientService", "BasicHttpBinding_ClientService",,,,,Ложь);
	Фабрика = Прокси.ФабрикаXDTO;
	НастройкиПодключения = ПолучитьНастройкиВхода();	
	
	СписокКодов = Фабрика.Создать(Фабрика.Тип(структураУРЛов.URL_microsoft, "ArrayOfstring"));
	СписокКодов.string.Добавить(САЕ);		
	
	Ответ = Прокси.GetGoodsInfo(НастройкиПодключения.login, НастройкиПодключения.password, СписокКодов);
	
	Если Ответ.tyreList.TyreContainer.Количество() > 0 Тогда
		
		Возврат Ответ.tyreList.TyreContainer[0];
		
	КонецЕсли;   	
		
КонецФункции

&НаСервере
Функция ПолучитьЦеныКолесаФорточки(САЕ) Экспорт
	
	структураУРЛов = ПолучитьСтруктуруURL();
	Прокси = WSСсылки.PwrsWebService.СоздатьWSПрокси(структураУРЛов.API_tns, "ClientService", "BasicHttpBinding_ClientService",,,,,Ложь);
	Фабрика = Прокси.ФабрикаXDTO;
	НастройкиПодключения = ПолучитьНастройкиВхода();	
	
	Фильтр = Фабрика.Создать(Фабрика.Тип(структураУРЛов.URL_SearchProductsAndPricesInfo, "GoodsPriceRestFilter"));
	
	СписокКодов = Фабрика.Создать(Фабрика.Тип(структураУРЛов.URL_microsoft, "ArrayOfstring"));
	СписокКодов.string.Добавить(САЕ);
	
	Фильтр.code_list = СписокКодов;
	
	
	Склады = Фабрика.Создать(Фабрика.Тип(структураУРЛов.URL_microsoft, "ArrayOfint"));
	настройкиОХ = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("ФорточкиОХ");
	Склады.int.Добавить(настройкиОХ.ИдентификаторСкладаЧисло);
	
	Фильтр.wrh_list = Склады;
	
	
	Ответ = Прокси.GetGoodsPriceRestByCode(НастройкиПодключения.login, НастройкиПодключения.password, Фильтр);
	
	структураЦены = Новый Структура("Закупка,Розница",0,0);
	
	Если Ответ.price_rest_list.price_rest.Количество() > 0 Тогда
		Если Ответ.price_rest_list.price_rest[0].whpr.wh_price_rest.Количество() > 0 Тогда
			
			 структураЦены.Закупка = Ответ.price_rest_list.price_rest[0].whpr.wh_price_rest[0].price;
			 структураЦены.Розница = Ответ.price_rest_list.price_rest[0].whpr.wh_price_rest[0].price_rozn;
			
		 КонецЕсли;   
	КонецЕсли;
	 
	 Возврат структураЦены;
		
КонецФункции

//Притула Р.В. Конец  13.08.2018