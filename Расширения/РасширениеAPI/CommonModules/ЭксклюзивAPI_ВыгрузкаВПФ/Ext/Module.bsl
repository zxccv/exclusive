Функция ОбъектЕстьВВыгрузке(массивВыгрузка,Объект) Экспорт
	
	УИД = Строка(Объект.УникальныйИдентификатор());
	
	Для Н = 0 По массивВыгрузка.Количество() - 1 Цикл
		
		Если массивВыгрузка[Н].УИД = УИД Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат Ложь;
	
КонецФункции

Функция НаименованиеСкладаПоДокументу(Документ,Реквизит = "Склад")
	
	НастройкиВыгрузкиСкладов = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("ПечатныеФормы_Склады",Истина,Ложь);
	СкладДокумента = Документ[Реквизит];
	Если НЕ СкладДокумента.ЭтоГруппа И НЕ СкладДокумента.Пустая() Тогда
		СкладДокумента = СкладДокумента.Родитель;
	КонецЕсли;
	строкаНастройкаВыгрузкиСклада = НастройкиВыгрузкиСкладов.Найти(СкладДокумента,"ГруппаСкладов");	
	Если строкаНастройкаВыгрузкиСклада <> Неопределено Тогда
		Возврат строкаНастройкаВыгрузкиСклада.НаименованиеСкладаДляВыгрузки;
	Иначе
		Возврат "";			
	КонецЕсли;
	
КонецФункции

Процедура ДобавитьКонтрагентаИзДокумента(массивВыгрузка,структураДокумент,Документ)
	
	настройкиПФ = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("ПечатныеФормы");
	
	Если Документ.Контрагент <> настройкиПФ.КонтрагентИнтернетМагазин Тогда
		
		структураДокумент.Вставить("СпециальныйКонтрагент",Ложь);
		структураДокумент.Вставить("Контрагент",Строка(Документ.Контрагент.УникальныйИдентификатор()));
		ВыгрузитьКонтрагента(массивВыгрузка,Документ.Контрагент);
		
	Иначе
		
		структураДокумент.Вставить("СпециальныйКонтрагент",Истина);
		
		ПКО = Документы.ПриходныйКассовыйОрдер.НайтиПоРеквизиту("ДокументОснование",Документ);
		
		Если ПКО.Пустая() Тогда
			структураДокумент.Вставить("Контрагент","Интернет-магазин БЕЗНАЛ");	
		Иначе
			структураДокумент.Вставить("Контрагент","Интернет-магазин НАЛИЧНЫЕ");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузитьПозициюНоменклатуры(массивВыгрузка,Номенклатура) Экспорт
	
	структураНоменклатура = Новый Структура;
	структураНоменклатура.Вставить("Тип","Номенклатура");
	структураНоменклатура.Вставить("УИД",Строка(Номенклатура.УникальныйИдентификатор()));
	структураНоменклатура.Вставить("Наименование",Номенклатура.Наименование);
	Если НЕ Номенклатура.ЭтоГруппа Тогда
		структураНоменклатура.Вставить("НаименованиеПолное",Номенклатура.НаименованиеПолное);
		структураНоменклатура.Вставить("Артикул",Номенклатура.Артикул);
	Иначе
		структураНоменклатура.Вставить("НаименованиеПолное",Номенклатура.Наименование);
	КонецЕсли;
	структураНоменклатура.Вставить("ЭтоГруппа",Номенклатура.ЭтоГруппа);
	структураНоменклатура.Вставить("ПометкаУдаления",Номенклатура.ПометкаУдаления);
	
	Если НЕ Номенклатура.Родитель.Пустая() Тогда
		Если НЕ ОбъектЕстьВВыгрузке(массивВыгрузка,Номенклатура.Родитель) Тогда
			ВыгрузитьПозициюНоменклатуры(массивВыгрузка,Номенклатура.Родитель);
		КонецЕсли;
		
		структураНоменклатура.Вставить("УИДРодителя",Строка(Номенклатура.Родитель.УникальныйИдентификатор()));
		структураНоменклатура.Вставить("НаименованиеРодителя",Номенклатура.Родитель.Наименование);
		
	Иначе
		
		структураНоменклатура.Вставить("УИДРодителя","");
		структураНоменклатура.Вставить("НаименованиеРодителя","");
				
	КонецЕсли;
	
	массивВыгрузка.Добавить(структураНоменклатура);
	
КонецПроцедуры

Процедура ВыгрузитьКонтрагента(массивВыгрузка,Контрагент) Экспорт
	
	//Если НЕ ЗначениеЗаполнено(Контрагент.ИНН) Тогда
	//	ВызватьИсключение "У контрагента не заполнен ИНН. Выгрузка невозможна";
	//КонецЕсли;
	
	структураКонтрагент = Новый Структура;
	структураКонтрагент.Вставить("Тип","Контрагент");
	структураКонтрагент.Вставить("УИД",Строка(Контрагент.УникальныйИдентификатор()));	
	структураКонтрагент.Вставить("ЮрФизЛицо",Строка(Контрагент.ЮрФизЛицо));
	структураКонтрагент.Вставить("Наименование",Контрагент.Наименование);
	структураКонтрагент.Вставить("НаименованиеПолное",Контрагент.НаименованиеПолное);
	структураКонтрагент.Вставить("ИНН",Контрагент.ИНН);
	структураКонтрагент.Вставить("КПП",Контрагент.КПП);
	структураКонтрагент.Вставить("ПометкаУдаления",Контрагент.ПометкаУдаления);
	
	//Притула Р.В. Начало 16.08.2018 #2632
	Если Контрагент.ОбособленноеПодразделение Тогда
		структураКонтрагент.Вставить("ОбособленноеПодразделение", Контрагент.ОбособленноеПодразделение);
		структураКонтрагент.Вставить("УИДГоловного", Строка(Контрагент.ГоловнойКонтрагент.УникальныйИдентификатор()));
		ВыгрузитьКонтрагента(массивВыгрузка,Контрагент.ГоловнойКонтрагент);
	КонецЕсли;	
	//Притула Р.В. Конец  16.08.2018
	
	Адрес = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(Контрагент,Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента,,ТекущаяДата());
	
	структураКонтрагент.Вставить("Адрес",Адрес);
	
	//Притула Р.В. Начало 15.08.2018 #2632
	АдресФакт = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформацииОбъекта(Контрагент,Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента,,ТекущаяДата());
	структураКонтрагент.Вставить("АдресФакт",АдресФакт);
	//Притула Р.В. Конец  15.08.2018
		
	массивВыгрузка.Добавить(структураКонтрагент);
	
КонецПроцедуры

Процедура ВыгрузитьРеализациюТоваровУслуг(массивВыгрузка,ДокументРеализация) Экспорт
	
	структураРеализация = Новый Структура;
	структураРеализация.Вставить("Тип","Реализация");
	структураРеализация.Вставить("УИД",Строка(ДокументРеализация.УникальныйИдентификатор()));	
	
	структураРеализация.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураРеализация.Вставить("Номер",ДокументРеализация.Номер);
	структураРеализация.Вставить("Дата",ДокументРеализация.Дата);
	структураРеализация.Вставить("Представление",Строка(ДокументРеализация));
	
	ДобавитьКонтрагентаИзДокумента(массивВыгрузка,структураРеализация,ДокументРеализация);
	
	//Самойлов А.С. Начало 2018-07-31 #	
	//структураПередача.Вставить("Склад","");//Пока так
	структураРеализация.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументРеализация));
	//Самойлов А.С. Конец  2018-07-31
	структураРеализация.Вставить("Проведен",ДокументРеализация.Проведен);
	структураРеализация.Вставить("ПометкаУдаления",ДокументРеализация.ПометкаУдаления);
	
	//Притула Р.В. Начало 15.08.2018 #2651
	Если ЗначениеЗаполнено(ДокументРеализация.ЗаказКлиента) И ЗначениеЗаполнено(ДокументРеализация.ЗаказКлиента.АдресДоставки) Тогда
		структураРеализация.Вставить("АдресДоставки",ДокументРеализация.ЗаказКлиента.АдресДоставки);
	Иначе
		структураРеализация.Вставить("АдресДоставки","");
	КонецЕсли;	
	//Притула Р.В. Конец  15.08.2018
	
	//Притула Р.В. Начало 15.10.2018 #3450
	Если ЗначениеЗаполнено(ДокументРеализация.Грузополучатель) Тогда
		структураРеализация.Вставить("Грузополучатель", Строка(ДокументРеализация.Грузополучатель.УникальныйИдентификатор()));
		ВыгрузитьКонтрагента(массивВыгрузка,ДокументРеализация.Грузополучатель);
	КонецЕсли;	
	//Притула Р.В. Конец  15.10.2018
	
	массивТовары = Новый Массив;
	
	ЗапросГТД = Новый Запрос;
	ЗапросГТД.Текст = 
	"ВЫБРАТЬ
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад КАК Склад,
	|    ТоварыОрганизаций.НомерГТД КАК НомерГТД
	//Притула Р.В. Начало 22.08.2018 #2654
	|	 ,ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	//Притула Р.В. Конец  22.08.2018	
	|ИЗ
	|    РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|    ТоварыОрганизаций.Регистратор = &Регистратор";
	
	ЗапросГТД.УстановитьПараметр("Регистратор",ДокументРеализация);
	
	тзГТД = ЗапросГТД.Выполнить().Выгрузить();
	
	Для Каждого стрТовары Из ДокументРеализация.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		ОстатокПоСтроке = стрТовары.Количество;
		СуммаПоСтрокамГТД = 0;
		СуммаНДСПоСтрокамГТД = 0;
		//Притула Р.В. Конец  22.08.2018
		
		//Притула Р.В. Начало 25.09.2018 #3127
		//новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
		стрТоварыЦена = стрТовары.Сумма / стрТовары.Количество;
		новСтруктураТовар.Вставить("Цена",стрТоварыЦена);
		//Притула Р.В. Конец  25.09.2018
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
		//новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
		//Притула Р.В. Конец  22.08.2018
		
		строкиГТД = тзГТД.НайтиСтроки(Новый Структура("Номенклатура,Характеристика,Склад",стрТовары.Номенклатура,стрТовары.Характеристика,стрТовары.Склад));
		
		//Притула Р.В. Начало 22.08.2018 #2654 
		//Если строкиГТД.Количество() > 0 И ЗначениеЗаполнено(строкиГТД[0].НомерГТД) Тогда	
			//НомерГТД = строкиГТД[0].НомерГТД;
			//новСтруктураТовар.Вставить("НомерГТД",НомерГТД.Код);
			//новСтруктураТовар.Вставить("СтранаПроисхождения",НомерГТД.СтранаПроисхождения.Наименование);
		Если строкиГТД.Количество() > 0 Тогда			
			Для каждого строкаГТД Из строкиГТД Цикл
				Если строкаГТД.ОстатокКРаспределению = 0
					  ИЛИ ОстатокПоСтроке = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				КоличествоВСтроке = Мин(ОстатокПоСтроке,строкаГТД.ОстатокКРаспределению); 
				ОстатокПоСтроке = ОстатокПоСтроке - КоличествоВСтроке;
				строкаГТД.ОстатокКРаспределению = строкаГТД.ОстатокКРаспределению - КоличествоВСтроке;
				
				//Притула Р.В. Начало 25.09.2018 #3127
				//Сумма = стрТовары.Цена * КоличествоВСтроке;
				Сумма = стрТоварыЦена * КоличествоВСтроке;				
				//Притула Р.В. Конец  25.09.2018
				
				СуммаНДС = КоличествоВСтроке * стрТовары.СуммаНДС/стрТовары.Количество;
				СуммаПоСтрокамГТД = СуммаПоСтрокамГТД + Сумма;
				СуммаНДСПоСтрокамГТД = СуммаНДСПоСтрокамГТД + СуммаНДС;
				
				новСтруктураТовар = Новый Структура;
				новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
				//Притула Р.В. Начало 25.09.2018 #3127
				//новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
				новСтруктураТовар.Вставить("Цена",стрТоварыЦена);
				//Притула Р.В. Конец  25.09.2018
				новСтруктураТовар.Вставить("Количество", КоличествоВСтроке);
				новСтруктураТовар.Вставить("Сумма", Сумма);
				новСтруктураТовар.Вставить("СуммаНДС",СуммаНДС);
								
				НомерГТД = строкаГТД.НомерГТД;
				новСтруктураТовар.Вставить("НомерГТД",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.Код, ""));
				новСтруктураТовар.Вставить("СтранаПроисхождения",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.СтранаПроисхождения.Наименование,""));
				
				массивТовары.Добавить(новСтруктураТовар);
				
			КонецЦикла;	
			
			//при наличии расхождения сумм в сформированном массиве структур и изначальной строке документа вычтем разницу в последней структуре
			РазницаСумм = СуммаПоСтрокамГТД - стрТовары.Сумма;
			РазницаСуммНДС = СуммаНДСПоСтрокамГТД - стрТовары.СуммаНДС;
			КолСтр = массивТовары.Количество();
			ПослСтр = массивТовары[КолСтр-1];
			ПослСтр.Сумма = ПослСтр.Сумма - РазницаСумм;
			ПослСтр.СуммаНДС = ПослСтр.СуммаНДС - РазницаСуммНДС;
			
		//Притула Р.В. Конец  22.08.2018
		Иначе
			новСтруктураТовар.Вставить("НомерГТД","");
			новСтруктураТовар.Вставить("СтранаПроисхождения","");
			//Притула Р.В. Начало 22.08.2018 #2654
			новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
			новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
			новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
			массивТовары.Добавить(новСтруктураТовар);
			//Притула Р.В. Конец  22.08.2018
		КонецЕсли;

		//Притула Р.В. Начало 22.08.2018 #2654
		//массивТовары.Добавить(новСтруктураТовар);
		//Притула Р.В. Конец  22.08.2018

		
	КонецЦикла;
	
	структураРеализация.Вставить("Товары",массивТовары);
	
	//Притула Р.В. Начало 21.08.2018 #3069
	структураРеализация.Вставить("ЦенаВключаетНДС", ДокументРеализация.ЦенаВключаетНДС);
	//Притула Р.В. Конец  21.08.2018
	
	массивВыгрузка.Добавить(структураРеализация);
	
КонецПроцедуры

Процедура ВыгрузитьПередачуТоваров(массивВыгрузка,ДокументПередача) Экспорт
	
	структураПередача = Новый Структура;
	структураПередача.Вставить("Тип","Реализация");
	структураПередача.Вставить("УИД",Строка(ДокументПередача.УникальныйИдентификатор()));	
	
	структураПередача.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураПередача.Вставить("Номер",ДокументПередача.Номер);
	структураПередача.Вставить("Дата",ДокументПередача.Дата);
	
	//Самойлов А.С. Начало 2018-08-06 #
	структураПередача.Вставить("ЗагружатьДатойДокумента",Истина);
	//Самойлов А.С. Конец  2018-08-06
	
	структураПередача.Вставить("Представление",Строка(ДокументПередача));
	структураПередача.Вставить("Контрагент",Строка(ДокументПередача.ОрганизацияПолучатель.УникальныйИдентификатор()));
		
	ВыгрузитьКонтрагента(массивВыгрузка,ДокументПередача.ОрганизацияПолучатель);
	
	//Самойлов А.С. Начало 2018-07-31 #	
	//структураПередача.Вставить("Склад","");//Пока так
	структураПередача.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументПередача));
	//Самойлов А.С. Конец  2018-07-31
	структураПередача.Вставить("Проведен",ДокументПередача.Проведен);
	структураПередача.Вставить("ПометкаУдаления",ДокументПередача.ПометкаУдаления);
	
	ЗапросГТД = Новый Запрос;
	ЗапросГТД.Текст = 
	"ВЫБРАТЬ
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    ТоварыОрганизаций.НомерГТД КАК НомерГТД
	//Притула Р.В. Начало 22.08.2018 #2654
	|	 ,ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	//Притула Р.В. Конец  22.08.2018
	|ИЗ
	|    РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|    ТоварыОрганизаций.Регистратор = &Регистратор";
	
	ЗапросГТД.УстановитьПараметр("Регистратор",ДокументПередача);
	
	тзГТД = ЗапросГТД.Выполнить().Выгрузить();
	
	массивТовары = Новый Массив;
	
	Для Каждого стрТовары Из ДокументПередача.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		ОстатокПоСтроке = стрТовары.Количество;
		СуммаПоСтрокамГТД = 0;
		СуммаНДСПоСтрокамГТД = 0;
		//Притула Р.В. Конец  22.08.2018
		
		новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
		//новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
		//Притула Р.В. Конец  22.08.2018
		
		строкиГТД = тзГТД.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",стрТовары.Номенклатура,стрТовары.Характеристика));
		
		//Притула Р.В. Начало 22.08.2018 #2654 
		//Если строкиГТД.Количество() > 0 И ЗначениеЗаполнено(строкиГТД[0].НомерГТД) Тогда	
			//НомерГТД = строкиГТД[0].НомерГТД;
			//новСтруктураТовар.Вставить("НомерГТД",НомерГТД.Код);
			//новСтруктураТовар.Вставить("СтранаПроисхождения",НомерГТД.СтранаПроисхождения.Наименование);
		Если строкиГТД.Количество() > 0 Тогда			
			Для каждого строкаГТД Из строкиГТД Цикл
				Если (ЗначениеЗаполнено(стрТовары.НомерГТД) И строкаГТД.НомерГТД <> стрТовары.НомерГТД)
					  ИЛИ строкаГТД.ОстатокКРаспределению = 0
					  ИЛИ ОстатокПоСтроке = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				КоличествоВСтроке = Мин(ОстатокПоСтроке,строкаГТД.ОстатокКРаспределению); 
				ОстатокПоСтроке = ОстатокПоСтроке - КоличествоВСтроке;
				строкаГТД.ОстатокКРаспределению = строкаГТД.ОстатокКРаспределению - КоличествоВСтроке;
				
				Сумма = стрТовары.Цена * КоличествоВСтроке;
				СуммаНДС = КоличествоВСтроке * стрТовары.СуммаНДС/стрТовары.Количество;
				СуммаПоСтрокамГТД = СуммаПоСтрокамГТД + Сумма;
				СуммаНДСПоСтрокамГТД = СуммаНДСПоСтрокамГТД + СуммаНДС;
				
				новСтруктураТовар = Новый Структура;
				новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
				новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
				новСтруктураТовар.Вставить("Количество", КоличествоВСтроке);
				новСтруктураТовар.Вставить("Сумма", Сумма);
				новСтруктураТовар.Вставить("СуммаНДС",СуммаНДС);
								
				НомерГТД = строкаГТД.НомерГТД;
				новСтруктураТовар.Вставить("НомерГТД",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.Код, ""));
				новСтруктураТовар.Вставить("СтранаПроисхождения",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.СтранаПроисхождения.Наименование,""));
				
				массивТовары.Добавить(новСтруктураТовар);
				
			КонецЦикла;	
			
			//при наличии расхождения сумм в сформированном массиве структур и изначальной строке документа вычтем разницу в последней структуре
			РазницаСумм = СуммаПоСтрокамГТД - стрТовары.Сумма;
			РазницаСуммНДС = СуммаНДСПоСтрокамГТД - стрТовары.СуммаНДС;
			КолСтр = массивТовары.Количество();
			ПослСтр = массивТовары[КолСтр-1];
			ПослСтр.Сумма = ПослСтр.Сумма - РазницаСумм;
			ПослСтр.СуммаНДС = ПослСтр.СуммаНДС - РазницаСуммНДС;
			
		//Притула Р.В. Конец  22.08.2018
		Иначе
			новСтруктураТовар.Вставить("НомерГТД","");
			новСтруктураТовар.Вставить("СтранаПроисхождения","");
			//Притула Р.В. Начало 22.08.2018 #2654
			новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
			новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
			новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
			массивТовары.Добавить(новСтруктураТовар);
			//Притула Р.В. Конец  22.08.2018
		КонецЕсли;

		//Притула Р.В. Начало 22.08.2018 #2654
		//массивТовары.Добавить(новСтруктураТовар);
		//Притула Р.В. Конец  22.08.2018
		
	КонецЦикла;
	
	структураПередача.Вставить("Товары",массивТовары);
	
	//Притула Р.В. Начало 21.09.2018 #3069
	структураПередача.Вставить("ЦенаВключаетНДС", ДокументПередача.ЦенаВключаетНДС);
	//Притула Р.В. Конец  21.09.2018
	
	массивВыгрузка.Добавить(структураПередача);
	
КонецПроцедуры

Процедура ВыгрузитьПриобретениеТоваров(массивВыгрузка,ДокументПриобретение) Экспорт
	
	структураПоступление = Новый Структура;
	структураПоступление.Вставить("Тип","Поступление");
	структураПоступление.Вставить("УИД",Строка(ДокументПриобретение.УникальныйИдентификатор()));	
	
	структураПоступление.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураПоступление.Вставить("Номер",ДокументПриобретение.Номер);
	структураПоступление.Вставить("Дата",ДокументПриобретение.Дата);
	
	структураПоступление.Вставить("НомерВходящегоДокумента",ДокументПриобретение.НомерВходящегоДокумента);
	структураПоступление.Вставить("ДатаВходящегоДокумента",ДокументПриобретение.ДатаВходящегоДокумента);
	
	структураПоступление.Вставить("Представление",Строка(ДокументПриобретение));
	структураПоступление.Вставить("Контрагент",Строка(ДокументПриобретение.Контрагент.УникальныйИдентификатор()));
		
	ВыгрузитьКонтрагента(массивВыгрузка,ДокументПриобретение.Контрагент);
	
	//Самойлов А.С. Начало 2018-07-31 #	
	//структураПередача.Вставить("Склад","");//Пока так
	структураПоступление.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументПриобретение));
	//Самойлов А.С. Конец  2018-07-31
	структураПоступление.Вставить("Проведен",ДокументПриобретение.Проведен);
	структураПоступление.Вставить("ПометкаУдаления",ДокументПриобретение.ПометкаУдаления);
	
	//Притула Р.В. Начало 21.08.2018 #2740
	структураПоступление.Вставить("ЦенаВключаетНДС", ДокументПриобретение.ЦенаВключаетНДС);
	//Притула Р.В. Конец  21.08.2018
	
	
	ЗапросСФ = Новый Запрос;
	ЗапросСФ.Текст =
	"ВЫБРАТЬ
	|    СчетФактураПолученныйДокументыОснования.Ссылка КАК Ссылка
	|ИЗ
	|    Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|    СчетФактураПолученныйДокументыОснования.ДокументОснование = &ДокументОснование";
	
	ЗапросСФ.УстановитьПараметр("ДокументОснование",ДокументПриобретение);
	
	Выборка = ЗапросСФ.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		структураПоступление.Вставить("НомерСФ",Выборка.Ссылка.Номер);	
		структураПоступление.Вставить("ДатаСФ",Выборка.Ссылка.ДатаСоставления);
	КонецЕсли;
	
	массивТовары = Новый Массив;
	
	Для Каждого стрТовары Из ДокументПриобретение.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
		
		новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
		новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
		новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
		
		новСтруктураТовар.Вставить("НомерГТД",стрТовары.НомерГТД.Код);
		новСтруктураТовар.Вставить("СтранаПроисхождения",стрТовары.НомерГТД.СтранаПроисхождения.Наименование);
		
		массивТовары.Добавить(новСтруктураТовар);
		
	КонецЦикла;
		
	структураПоступление.Вставить("Товары",массивТовары);
	
	массивВыгрузка.Добавить(структураПоступление);
	
КонецПроцедуры

//Притула Р.В. Начало 16.08.2018 #2654
Процедура ВыгрузитьВозвратТоваровОтКлиента(массивВыгрузка,ДокументВозврат) Экспорт
	
	структураПоступление = Новый Структура;
	структураПоступление.Вставить("Тип","Поступление");
	структураПоступление.Вставить("УИД",Строка(ДокументВозврат.УникальныйИдентификатор()));	
	
	структураПоступление.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураПоступление.Вставить("Номер",ДокументВозврат.Номер);
	структураПоступление.Вставить("Дата",ДокументВозврат.Дата);
		
	структураПоступление.Вставить("Представление",Строка(ДокументВозврат));
	структураПоступление.Вставить("Контрагент",Строка(ДокументВозврат.Контрагент.УникальныйИдентификатор()));
		
	ВыгрузитьКонтрагента(массивВыгрузка,ДокументВозврат.Контрагент);
	
	структураПоступление.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументВозврат));
	
	структураПоступление.Вставить("Проведен",ДокументВозврат.Проведен);
	структураПоступление.Вставить("ПометкаУдаления",ДокументВозврат.ПометкаУдаления);
	
	ЗапросСФ = Новый Запрос;
	ЗапросСФ.Текст =
	"ВЫБРАТЬ
	|    СчетФактураПолученныйДокументыОснования.Ссылка КАК Ссылка
	|ИЗ
	|    Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|    СчетФактураПолученныйДокументыОснования.ДокументОснование = &ДокументОснование";
	
	ЗапросСФ.УстановитьПараметр("ДокументОснование",ДокументВозврат);
	
	Выборка = ЗапросСФ.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		структураПоступление.Вставить("НомерСФ",Выборка.Ссылка.Номер);	
		структураПоступление.Вставить("ДатаСФ",Выборка.Ссылка.ДатаСоставления);
		
		структураПоступление.Вставить("НомерВходящегоДокумента",Выборка.Ссылка.Номер);
		структураПоступление.Вставить("ДатаВходящегоДокумента",Выборка.Ссылка.ДатаСоставления);

	КонецЕсли;	
	
	ЗапросГТД = Новый Запрос;
	ЗапросГТД.Текст = 
	"ВЫБРАТЬ
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    ТоварыОрганизаций.НомерГТД КАК НомерГТД
	//Притула Р.В. Начало 04.09.2018
	////Притула Р.В. Начало 22.08.2018 #2654
	//|	 ,ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	////Притула Р.В. Конец  22.08.2018	
	|	 , - ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	//Притула Р.В. Конец  04.09.2018
	|ИЗ
	|    РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|    ТоварыОрганизаций.Регистратор = &Регистратор";
	
	ЗапросГТД.УстановитьПараметр("Регистратор",ДокументВозврат);
	
	тзГТД = ЗапросГТД.Выполнить().Выгрузить();
	
	массивТовары = Новый Массив;
	
	Для Каждого стрТовары Из ДокументВозврат.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		ОстатокПоСтроке = стрТовары.Количество;
		СуммаПоСтрокамГТД = 0;
		СуммаНДСПоСтрокамГТД = 0;
		//Притула Р.В. Конец  22.08.2018
		
		новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
		//новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
		//Притула Р.В. Конец  22.08.2018
		
		строкиГТД = тзГТД.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",стрТовары.Номенклатура,стрТовары.Характеристика));
		
		//Притула Р.В. Начало 22.08.2018 #2654 
		//Если строкиГТД.Количество() > 0 И ЗначениеЗаполнено(строкиГТД[0].НомерГТД) Тогда	
			//НомерГТД = строкиГТД[0].НомерГТД;
			//новСтруктураТовар.Вставить("НомерГТД",НомерГТД.Код);
			//новСтруктураТовар.Вставить("СтранаПроисхождения",НомерГТД.СтранаПроисхождения.Наименование);
		Если строкиГТД.Количество() > 0 Тогда			
			Для каждого строкаГТД Из строкиГТД Цикл
				Если строкаГТД.ОстатокКРаспределению = 0
					  ИЛИ ОстатокПоСтроке = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				КоличествоВСтроке = Мин(ОстатокПоСтроке,строкаГТД.ОстатокКРаспределению); 
				ОстатокПоСтроке = ОстатокПоСтроке - КоличествоВСтроке;
				строкаГТД.ОстатокКРаспределению = строкаГТД.ОстатокКРаспределению - КоличествоВСтроке;
				
				Сумма = стрТовары.Цена * КоличествоВСтроке;
				СуммаНДС = КоличествоВСтроке * стрТовары.СуммаНДС/стрТовары.Количество;
				СуммаПоСтрокамГТД = СуммаПоСтрокамГТД + Сумма;
				СуммаНДСПоСтрокамГТД = СуммаНДСПоСтрокамГТД + СуммаНДС;
				
				новСтруктураТовар = Новый Структура;
				новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
				новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
				новСтруктураТовар.Вставить("Количество", КоличествоВСтроке);
				новСтруктураТовар.Вставить("Сумма", Сумма);
				новСтруктураТовар.Вставить("СуммаНДС",СуммаНДС);
								
				НомерГТД = строкаГТД.НомерГТД;
				новСтруктураТовар.Вставить("НомерГТД",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.Код, ""));
				новСтруктураТовар.Вставить("СтранаПроисхождения",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.СтранаПроисхождения.Наименование,""));
				
				массивТовары.Добавить(новСтруктураТовар);
				
			КонецЦикла;	
			
			//при наличии расхождения сумм в сформированном массиве структур и изначальной строке документа вычтем разницу в последней структуре
			РазницаСумм = СуммаПоСтрокамГТД - стрТовары.Сумма;
			РазницаСуммНДС = СуммаНДСПоСтрокамГТД - стрТовары.СуммаНДС;
			КолСтр = массивТовары.Количество();
			ПослСтр = массивТовары[КолСтр-1];
			ПослСтр.Сумма = ПослСтр.Сумма - РазницаСумм;
			ПослСтр.СуммаНДС = ПослСтр.СуммаНДС - РазницаСуммНДС;
			
		//Притула Р.В. Конец  22.08.2018
		Иначе
			новСтруктураТовар.Вставить("НомерГТД","");
			новСтруктураТовар.Вставить("СтранаПроисхождения","");
			//Притула Р.В. Начало 22.08.2018 #2654
			новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
			новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
			новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
			массивТовары.Добавить(новСтруктураТовар);
			//Притула Р.В. Конец  22.08.2018
		КонецЕсли;

		//Притула Р.В. Начало 22.08.2018 #2654
		//массивТовары.Добавить(новСтруктураТовар);
		//Притула Р.В. Конец  22.08.2018
		
	КонецЦикла;
		
	структураПоступление.Вставить("Товары",массивТовары);
	
	//Притула Р.В. Начало 21.09.2018 #3069
	структураПоступление.Вставить("ЦенаВключаетНДС", ДокументВозврат.ЦенаВключаетНДС);
	//Притула Р.В. Конец  21.09.2018
	
	массивВыгрузка.Добавить(структураПоступление);

	
КонецПроцедуры	

Процедура ВыгрузитьВозвратТоваровПоставщику(массивВыгрузка,ДокументВозврат) Экспорт
	
	структураРеализация = Новый Структура;
	структураРеализация.Вставить("Тип","Реализация");
	структураРеализация.Вставить("УИД",Строка(ДокументВозврат.УникальныйИдентификатор()));	
	
	структураРеализация.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураРеализация.Вставить("Номер",ДокументВозврат.Номер);
	структураРеализация.Вставить("Дата",ДокументВозврат.Дата);
	структураРеализация.Вставить("Представление",Строка(ДокументВозврат));
	
	ДобавитьКонтрагентаИзДокумента(массивВыгрузка,структураРеализация,ДокументВозврат);
	
	структураРеализация.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументВозврат));
	структураРеализация.Вставить("Проведен",ДокументВозврат.Проведен);
	структураРеализация.Вставить("ПометкаУдаления",ДокументВозврат.ПометкаУдаления);
	
	структураРеализация.Вставить("АдресДоставки",ДокументВозврат.АдресДоставки);
	
	массивТовары = Новый Массив;
	
	ЗапросГТД = Новый Запрос;
	ЗапросГТД.Текст = 
	"ВЫБРАТЬ
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    ТоварыОрганизаций.НомерГТД КАК НомерГТД
	//Притула Р.В. Начало 22.08.2018 #2654
	|	 ,ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	//Притула Р.В. Конец  22.08.2018
	|ИЗ
	|    РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|    ТоварыОрганизаций.Регистратор = &Регистратор";
	
	ЗапросГТД.УстановитьПараметр("Регистратор",ДокументВозврат);
	
	тзГТД = ЗапросГТД.Выполнить().Выгрузить();
	
	Для Каждого стрТовары Из ДокументВозврат.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		ОстатокПоСтроке = стрТовары.Количество;
		СуммаПоСтрокамГТД = 0;
		СуммаНДСПоСтрокамГТД = 0;
		//Притула Р.В. Конец  22.08.2018
		
		новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
		//новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
		//Притула Р.В. Конец  22.08.2018		
		
		строкиГТД = тзГТД.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",стрТовары.Номенклатура,стрТовары.Характеристика));
		
		//Притула Р.В. Начало 22.08.2018 #2654 
		//Если строкиГТД.Количество() > 0 И ЗначениеЗаполнено(строкиГТД[0].НомерГТД) Тогда	
			//НомерГТД = строкиГТД[0].НомерГТД;
			//новСтруктураТовар.Вставить("НомерГТД",НомерГТД.Код);
			//новСтруктураТовар.Вставить("СтранаПроисхождения",НомерГТД.СтранаПроисхождения.Наименование);
		Если строкиГТД.Количество() > 0 Тогда			
			Для каждого строкаГТД Из строкиГТД Цикл
				Если строкаГТД.ОстатокКРаспределению = 0
					  ИЛИ ОстатокПоСтроке = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				КоличествоВСтроке = Мин(ОстатокПоСтроке,строкаГТД.ОстатокКРаспределению); 
				ОстатокПоСтроке = ОстатокПоСтроке - КоличествоВСтроке;
				строкаГТД.ОстатокКРаспределению = строкаГТД.ОстатокКРаспределению - КоличествоВСтроке;
				
				Сумма = стрТовары.Цена * КоличествоВСтроке;
				СуммаНДС = КоличествоВСтроке * стрТовары.СуммаНДС/стрТовары.Количество;
				СуммаПоСтрокамГТД = СуммаПоСтрокамГТД + Сумма;
				СуммаНДСПоСтрокамГТД = СуммаНДСПоСтрокамГТД + СуммаНДС;
				
				новСтруктураТовар = Новый Структура;
				новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
				новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
				новСтруктураТовар.Вставить("Количество", КоличествоВСтроке);
				новСтруктураТовар.Вставить("Сумма", Сумма);
				новСтруктураТовар.Вставить("СуммаНДС",СуммаНДС);
								
				НомерГТД = строкаГТД.НомерГТД;
				новСтруктураТовар.Вставить("НомерГТД",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.Код, ""));
				новСтруктураТовар.Вставить("СтранаПроисхождения",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.СтранаПроисхождения.Наименование,""));
				
				массивТовары.Добавить(новСтруктураТовар);
				
			КонецЦикла;	
			
			//при наличии расхождения сумм в сформированном массиве структур и изначальной строке документа вычтем разницу в последней структуре
			РазницаСумм = СуммаПоСтрокамГТД - стрТовары.Сумма;
			РазницаСуммНДС = СуммаНДСПоСтрокамГТД - стрТовары.СуммаНДС;
			КолСтр = массивТовары.Количество();
			ПослСтр = массивТовары[КолСтр-1];
			ПослСтр.Сумма = ПослСтр.Сумма - РазницаСумм;
			ПослСтр.СуммаНДС = ПослСтр.СуммаНДС - РазницаСуммНДС;
			
		//Притула Р.В. Конец  22.08.2018
		Иначе
			новСтруктураТовар.Вставить("НомерГТД","");
			новСтруктураТовар.Вставить("СтранаПроисхождения","");
			//Притула Р.В. Начало 22.08.2018 #2654
			новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
			новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
			новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
			массивТовары.Добавить(новСтруктураТовар);
			//Притула Р.В. Конец  22.08.2018
		КонецЕсли;

		//Притула Р.В. Начало 22.08.2018 #2654
		//массивТовары.Добавить(новСтруктураТовар);
		//Притула Р.В. Конец  22.08.2018
		
	КонецЦикла;
	
	структураРеализация.Вставить("Товары",массивТовары);
	
	//Притула Р.В. Начало 21.08.2018 #3069
	структураРеализация.Вставить("ЦенаВключаетНДС", ДокументВозврат.ЦенаВключаетНДС);
	//Притула Р.В. Конец  21.08.2018
	
	массивВыгрузка.Добавить(структураРеализация);
	
КонецПроцедуры	

Процедура ВыгрузитьСборкуТоваров(массивВыгрузка,ДокументСборка) Экспорт
	
	структураСборка = Новый Структура;
	структураСборка.Вставить("Тип","Сборка");
	структураСборка.Вставить("УИД",Строка(ДокументСборка.УникальныйИдентификатор()));	
	
	структураСборка.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураСборка.Вставить("Номер",ДокументСборка.Номер);
	структураСборка.Вставить("Дата",ДокументСборка.Дата);
	структураСборка.Вставить("Представление",Строка(ДокументСборка));
		
	структураСборка.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументСборка));
	структураСборка.Вставить("Проведен",ДокументСборка.Проведен);
	структураСборка.Вставить("ПометкаУдаления",ДокументСборка.ПометкаУдаления);
	
	структураСборка.Вставить("Номенклатура",Строка(ДокументСборка.Номенклатура.УникальныйИдентификатор()));
	структураСборка.Вставить("Количество",ДокументСборка.Количество);
	
	ВыгрузитьПозициюНоменклатуры(массивВыгрузка,ДокументСборка.Номенклатура);
	
	массивТовары = Новый Массив;
	
	ЗапросГТД = Новый Запрос;
	ЗапросГТД.Текст = 
	"ВЫБРАТЬ
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    ТоварыОрганизаций.НомерГТД КАК НомерГТД
	//Притула Р.В. Начало 22.08.2018 #2654
	|	 ,ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	//Притула Р.В. Конец  22.08.2018
	|ИЗ
	|    РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|    ТоварыОрганизаций.Регистратор = &Регистратор";
	
	ЗапросГТД.УстановитьПараметр("Регистратор",ДокументСборка);
	
	тзГТД = ЗапросГТД.Выполнить().Выгрузить();
	
	Для Каждого стрТовары Из ДокументСборка.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
				
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		ОстатокПоСтроке = стрТовары.Количество;
		//Притула Р.В. Конец  22.08.2018		
		
		строкиГТД = тзГТД.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",стрТовары.Номенклатура,стрТовары.Характеристика));
		

		//Притула Р.В. Начало 22.08.2018 #2654 
		//Если строкиГТД.Количество() > 0 И ЗначениеЗаполнено(строкиГТД[0].НомерГТД) Тогда	
			//НомерГТД = строкиГТД[0].НомерГТД;
			//новСтруктураТовар.Вставить("НомерГТД",НомерГТД.Код);
			//новСтруктураТовар.Вставить("СтранаПроисхождения",НомерГТД.СтранаПроисхождения.Наименование);
		Если строкиГТД.Количество() > 0 Тогда			
			Для каждого строкаГТД Из строкиГТД Цикл
				Если строкаГТД.ОстатокКРаспределению = 0
					  ИЛИ ОстатокПоСтроке = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				КоличествоВСтроке = Мин(ОстатокПоСтроке,строкаГТД.ОстатокКРаспределению); 
				ОстатокПоСтроке = ОстатокПоСтроке - КоличествоВСтроке;
				строкаГТД.ОстатокКРаспределению = строкаГТД.ОстатокКРаспределению - КоличествоВСтроке;
								
				новСтруктураТовар = Новый Структура;
				новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
				новСтруктураТовар.Вставить("Количество", КоличествоВСтроке);
								
				НомерГТД = строкаГТД.НомерГТД;
				новСтруктураТовар.Вставить("НомерГТД",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.Код, ""));
				новСтруктураТовар.Вставить("СтранаПроисхождения",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.СтранаПроисхождения.Наименование,""));
				
				массивТовары.Добавить(новСтруктураТовар);
				
			КонецЦикла;	
						
		//Притула Р.В. Конец  22.08.2018
		Иначе
			новСтруктураТовар.Вставить("НомерГТД","");
			новСтруктураТовар.Вставить("СтранаПроисхождения","");
			//Притула Р.В. Начало 22.08.2018 #2654
			массивТовары.Добавить(новСтруктураТовар);
			//Притула Р.В. Конец  22.08.2018
		КонецЕсли;

		//Притула Р.В. Начало 22.08.2018 #2654
		//массивТовары.Добавить(новСтруктураТовар);
		//Притула Р.В. Конец  22.08.2018		
		
	КонецЦикла;
	
	структураСборка.Вставить("Товары",массивТовары);
	
	массивВыгрузка.Добавить(структураСборка);
	
КонецПроцедуры	

Процедура ВыгрузитьОтчетОРозничныхПродажах(массивВыгрузка,ДокументОРП) Экспорт
	
	структураОРП = Новый Структура;
	
	структураОРП.Вставить("Тип","ОтчетОРозничныхПродажах");
	структураОРП.Вставить("УИД",Строка(ДокументОРП.УникальныйИдентификатор()));	
	
	структураОРП.Вставить("Ответственный",ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	структураОРП.Вставить("Номер",ДокументОРП.Номер);
	структураОРП.Вставить("Дата",ДокументОРП.Дата);
	структураОРП.Вставить("Представление",Строка(ДокументОРП));
		
	структураОРП.Вставить("Склад",НаименованиеСкладаПоДокументу(ДокументОРП));
	структураОРП.Вставить("Проведен",ДокументОРП.Проведен);
	структураОРП.Вставить("ПометкаУдаления",ДокументОРП.ПометкаУдаления);
	
	массивТовары = Новый Массив;
	
	ЗапросГТД = Новый Запрос;
	ЗапросГТД.Текст = 
	"ВЫБРАТЬ
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    ТоварыОрганизаций.НомерГТД КАК НомерГТД
	//Притула Р.В. Начало 22.08.2018 #2654
	|	 ,ТоварыОрганизаций.Количество КАК ОстатокКРаспределению
	//Притула Р.В. Конец  22.08.2018
	|ИЗ
	|    РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|    ТоварыОрганизаций.Регистратор = &Регистратор";
	
	ЗапросГТД.УстановитьПараметр("Регистратор",ДокументОРП);
	
	тзГТД = ЗапросГТД.Выполнить().Выгрузить();
	
	Для Каждого стрТовары Из ДокументОРП.Товары Цикл
		
		новСтруктураТовар = Новый Структура;
		новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
		
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,стрТовары.Номенклатура);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
		ОстатокПоСтроке = стрТовары.Количество;
		СуммаПоСтрокамГТД = 0;
		СуммаНДСПоСтрокамГТД = 0;
		//Притула Р.В. Конец  22.08.2018
		
		новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
		
		//Притула Р.В. Начало 22.08.2018 #2654
		//новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
		//новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
		//Притула Р.В. Конец  22.08.2018		
		
		строкиГТД = тзГТД.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",стрТовары.Номенклатура,стрТовары.Характеристика));
		
		//Притула Р.В. Начало 22.08.2018 #2654 
		//Если строкиГТД.Количество() > 0 И ЗначениеЗаполнено(строкиГТД[0].НомерГТД) Тогда	
			//НомерГТД = строкиГТД[0].НомерГТД;
			//новСтруктураТовар.Вставить("НомерГТД",НомерГТД.Код);
			//новСтруктураТовар.Вставить("СтранаПроисхождения",НомерГТД.СтранаПроисхождения.Наименование);
		Если строкиГТД.Количество() > 0 Тогда			
			Для каждого строкаГТД Из строкиГТД Цикл
				Если строкаГТД.ОстатокКРаспределению = 0
					  ИЛИ ОстатокПоСтроке = 0 Тогда
					Продолжить;				
				КонецЕсли;	
				
				КоличествоВСтроке = Мин(ОстатокПоСтроке,строкаГТД.ОстатокКРаспределению); 
				ОстатокПоСтроке = ОстатокПоСтроке - КоличествоВСтроке;
				строкаГТД.ОстатокКРаспределению = строкаГТД.ОстатокКРаспределению - КоличествоВСтроке;
				
				Сумма = стрТовары.Цена * КоличествоВСтроке;
				СуммаНДС = КоличествоВСтроке * стрТовары.СуммаНДС/стрТовары.Количество;
				СуммаПоСтрокамГТД = СуммаПоСтрокамГТД + Сумма;
				СуммаНДСПоСтрокамГТД = СуммаНДСПоСтрокамГТД + СуммаНДС;
				
				новСтруктураТовар = Новый Структура;
				новСтруктураТовар.Вставить("Номенклатура",Строка(стрТовары.Номенклатура.УникальныйИдентификатор()));
				новСтруктураТовар.Вставить("Цена",стрТовары.Цена);
				новСтруктураТовар.Вставить("Количество", КоличествоВСтроке);
				новСтруктураТовар.Вставить("Сумма", Сумма);
				новСтруктураТовар.Вставить("СуммаНДС",СуммаНДС);
								
				НомерГТД = строкаГТД.НомерГТД;
				новСтруктураТовар.Вставить("НомерГТД",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.Код, ""));
				новСтруктураТовар.Вставить("СтранаПроисхождения",?(ЗначениеЗаполнено(НомерГТД),НомерГТД.СтранаПроисхождения.Наименование,""));
				
				массивТовары.Добавить(новСтруктураТовар);
				
			КонецЦикла;	
			
			//при наличии расхождения сумм в сформированном массиве структур и изначальной строке документа вычтем разницу в последней структуре
			РазницаСумм = СуммаПоСтрокамГТД - стрТовары.Сумма;
			РазницаСуммНДС = СуммаНДСПоСтрокамГТД - стрТовары.СуммаНДС;
			КолСтр = массивТовары.Количество();
			ПослСтр = массивТовары[КолСтр-1];
			ПослСтр.Сумма = ПослСтр.Сумма - РазницаСумм;
			ПослСтр.СуммаНДС = ПослСтр.СуммаНДС - РазницаСуммНДС;
			
		//Притула Р.В. Конец  22.08.2018
		Иначе
			новСтруктураТовар.Вставить("НомерГТД","");
			новСтруктураТовар.Вставить("СтранаПроисхождения","");
			//Притула Р.В. Начало 22.08.2018 #2654
			новСтруктураТовар.Вставить("Сумма",стрТовары.Сумма);
			новСтруктураТовар.Вставить("СуммаНДС",стрТовары.СуммаНДС);
			новСтруктураТовар.Вставить("Количество",стрТовары.Количество);
			массивТовары.Добавить(новСтруктураТовар);
			//Притула Р.В. Конец  22.08.2018
		КонецЕсли;

		//Притула Р.В. Начало 22.08.2018 #2654
		//массивТовары.Добавить(новСтруктураТовар);
		//Притула Р.В. Конец  22.08.2018
		
	КонецЦикла;
	
	структураОРП.Вставить("Товары",массивТовары);
		
	массивОплат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|    СУММА(ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма) КАК Сумма
		|ИЗ
		|    Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОтчетОРозничныхПродажахОплатаПлатежнымиКартами
		|ГДЕ
		|    ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|    ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.КодАвторизации,
		|    ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.НомерПлатежнойКарты
		|
		|ИМЕЮЩИЕ
		|    СУММА(ОтчетОРозничныхПродажахОплатаПлатежнымиКартами.Сумма) > 0";
	Запрос.УстановитьПараметр("Ссылка", ДокументОРП);
	
	ОплатыКартами = Запрос.Выполнить().Выбрать();

	Пока ОплатыКартами.Следующий() Цикл
		
		новСтруктураОплата = Новый Структура;
		новСтруктураОплата.Вставить("Сумма", ОплатыКартами.Сумма);
		массивОплат.Добавить(новСтруктураОплата);

	КонецЦикла;	
	
	структураОРП.Вставить("Оплата",массивОплат);
	
	массивВыгрузка.Добавить(структураОРП);		
			
КонецПроцедуры
//Притула Р.В. Конец  16.08.2018

Функция ВыгрузитьОбъект(СсылкаНаОбъект) Экспорт
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация",СсылкаНаОбъект.Метаданные()) Тогда    
    настройкиПФ = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("ПечатныеФормы");
    Если СсылкаНаОбъект.Организация <> настройкиПФ.Организация Тогда
      //Притула Р.В. Начало 24.10.2018
      //Возврат Новый Структура("errorCode,errorDescription",998,"Могут быть выгружены только документы по организации Эксклюзив");  
      Если НЕ (ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") И СсылкаНаОбъект.Организация = Справочники.Организации.НайтиПоНаименованию("Эксклюзив СПб", Истина)) Тогда
        Возврат Новый Структура("errorCode,errorDescription",998,"Могут быть выгружены только документы по организации Эксклюзив");
      КонецЕсли;  
      //Притула Р.В. Конец  24.10.2018
    КонецЕсли;    
  КонецЕсли;
	
	//Самойлов А.С. Начало 2018-09-13 #2997
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Если СсылкаНаОбъект.Дата < '20180801' Тогда
			Возврат Новый Структура("errorCode,errorDescription",998,"Нельзя выгружать документы оформленные раньше 1 августа 2018 года");	
		КонецЕсли;
		
	КонецЕсли;
	//Самойлов А.С. Конец  2018-09-13
	
	массивВыгрузка = Новый Массив;
	
	//Притула Р.В. Начало 13.08.2018 #2678
	ЭтоСправочник = Ложь;
	//Притула Р.В. Конец  13.08.2018
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Номенклатура") Тогда
		//Притула Р.В. Начало 13.08.2018 #2678
		ЭтоСправочник = Истина;
		//Притула Р.В. Конец  13.08.2018
		ВыгрузитьПозициюНоменклатуры(массивВыгрузка,СсылкаНаОбъект);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Контрагенты") Тогда
		ВыгрузитьКонтрагента(массивВыгрузка,СсылкаНаОбъект);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда		
		ВыгрузитьРеализациюТоваровУслуг(массивВыгрузка,СсылкаНаОбъект);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		ВыгрузитьПередачуТоваров(массивВыгрузка,СсылкаНаОбъект);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		ВыгрузитьПриобретениеТоваров(массивВыгрузка,СсылкаНаОбъект);
	//Притула Р.В. Начало 16.08.2018 #2654
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		ВыгрузитьВозвратТоваровОтКлиента(массивВыгрузка,СсылкаНаОбъект);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ВыгрузитьВозвратТоваровПоставщику(массивВыгрузка,СсылкаНаОбъект);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		ВыгрузитьСборкуТоваров(массивВыгрузка,СсылкаНаОбъект);		
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ВыгрузитьОтчетОРозничныхПродажах(массивВыгрузка,СсылкаНаОбъект);		
	//Притула Р.В. Конец  16.08.2018
	Иначе
		Возврат Новый Структура("errorCode,errorDescription",999,"Объект данного типа не подлежит выгрузке");
	КонецЕсли;
	
	Результат = ВыполнитьЗапросКСервису("upload",Новый Структура("Объекты",массивВыгрузка));
	
	Если Результат.errorCode = 0 ИЛИ Результат.errorCode = 605 Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		мзСостоянияЭД = РегистрыСведений.СостоянияЭД.СоздатьМенеджерЗаписи();
		мзСостоянияЭД.СсылкаНаОбъект = СсылкаНаОбъект;
		
		//Притула Р.В. Начало 13.08.2018 #2678
		Если СсылкаНаОбъект.ПометкаУдаления Тогда
			мзСостоянияЭД.Комментарий = "ПометкаУдаления = Истина";
		ИначеЕсли Не ЭтоСправочник И Не СсылкаНаОбъект.Проведен Тогда
			мзСостоянияЭД.Комментарий = "Проведен = Ложь";
		КонецЕсли;	
		//Притула Р.В. Конец  13.08.2018
		
		
		Если Результат.errorCode = 0 Тогда
			мзСостоянияЭД.СостояниеВерсииЭД = Перечисления.СостоянияВерсийЭД.ОбменЗавершен;
		Иначе
			мзСостоянияЭД.СостояниеВерсииЭД = Перечисления.СостоянияВерсийЭД.ТребуетсяУточнитьДокумент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(мзСостоянияЭД.СсылкаНаОбъект) Тогда
			мзСостоянияЭД.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОбъектВыгружен(СсылкаНаОбъект) Экспорт
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация",СсылкаНаОбъект.Метаданные()) Тогда		
		настройкиПФ = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("ПечатныеФормы");
		Если СсылкаНаОбъект.Организация <> настройкиПФ.Организация Тогда
			Возврат Истина;	
		КонецЕсли;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|    СостоянияЭД.СостояниеВерсииЭД КАК СостояниеВерсииЭД
	|ИЗ
	|    РегистрСведений.СостоянияЭД КАК СостоянияЭД
	|ГДЕ
	|    СостоянияЭД.СсылкаНаОбъект = &СсылкаНаОбъект";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект",СсылкаНаОбъект);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СостояниеВерсииЭД = Перечисления.СостоянияВерсийЭД.ОбменЗавершен Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;		
	
КонецФункции

Функция ВыполнитьЗапросКСервису(Команда,структураЗапрос,ТипЗапроса = "POST",ЛогинПароль = Неопределено) Экспорт
	
	настройкиПФ = Экс_ОбщегоНазначенияСервер.ПолучитьВнешнююНастройку("ПечатныеФормы");
	
	WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	WinHttp.Option(2,"utf-8");     
	WinHttp.SetTimeouts(0,60000,600000,600000);
	
	АдресЗапроса = настройкиПФ.УРЛСервиса + Команда;
	
	Если ТипЗапроса = "GET" Тогда
		
		АдресЗапроса = АдресЗапроса + "?";
		
		Для Каждого КлючИЗначение Из структураЗапрос Цикл
			
			Если Прав(АдресЗапроса,1) <> "?" Тогда
				АдресЗапроса = АдресЗапроса + "&";
			КонецЕсли;
			
			АдресЗапроса = АдресЗапроса + КлючИЗначение.Ключ + "=" + КодироватьСтроку(КлючИЗначение.Значение,СпособКодированияСтроки.КодировкаURL);
			
		КонецЦикла;
				
	КонецЕсли;
	
	WinHttp.Open(ТипЗапроса,АдресЗапроса,0);
			
    WinHttp.SetRequestHeader("Accept-Language", "ru");
    WinHttp.SetRequestHeader("Accept-Charset","utf-8");
    WinHttp.setRequestHeader("Content-Language", "ru");
    WinHttp.setRequestHeader("Content-Charset", "utf-8");
    WinHttp.setRequestHeader("Content-type", "application/json; charset=utf-8");
	
	Если ЛогинПароль = Неопределено Тогда
		ЛогинПароль = Новый Структура;
		ЛогинПароль.Вставить("Логин",настройкиПФ.СлужебныйЛогин);
		ЛогинПароль.Вставить("Пароль",настройкиПФ.СлужебныйПароль);
	КонецЕсли;
	
	WinHttp.SetCredentials(ЛогинПароль.Логин,ЛогинПароль.Пароль,0);
	
	Если ТипЗапроса = "POST" Тогда
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
			
		ЗаписатьJSON(ЗаписьJSON,структураЗапрос);
		
		ПараметрыПОСТ = ЗаписьJSON.Закрыть();
		
		WinHttp.Send(ПараметрыПОСТ);
		
	Иначе
		
		WinHttp.Send();
		
	КонецЕсли;
	
	Если WinHttp.Status = 200 Тогда
		ТекстОтвета = WinHttp.ResponseText();
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТекстОтвета);
		
		структураОтвет = ПрочитатьJSON(ЧтениеJSON);
				
	Иначе
		структураОтвет = Новый Структура("errorCode,errorDescription",WinHttp.Status,"Ошибка подключения к базе ПФ");		
	КонецЕсли;
	
	Возврат структураОтвет;
		
КонецФункции

Процедура ПроверитьСоздатьПользователяПФ() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Пользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	
	структураПользователь = Новый Структура("Name",Пользователь.Имя);
	
	результатПользователь = ВыполнитьЗапросКСервису("user",структураПользователь,"GET");
	
	Если результатПользователь.errorCode = 103 Тогда
		
		ИмяПользователя = Пользователь.Имя;
		Пароль = Пользователь.СохраняемоеЗначениеПароля;		
		
		//Решили, что им пока не надо туда ходить
		//структураЗапрос = Новый Структура("Name,Password,Active",ИмяПользователя,Пароль,Истина);
		структураЗапрос = Новый Структура("Name,Password,Active",ИмяПользователя,Пароль,Ложь);
		
		Результат = ВыполнитьЗапросКСервису("user",структураЗапрос);
		
		Если Результат.errorCode <> 0 Тогда
			ВызватьИсключение Результат.errorDescription;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Функция ЕстьЛогинПароль() Экспорт
	
		
	
КонецФункции	
